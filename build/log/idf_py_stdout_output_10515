[1/12] Performing build step for 'bootloader'
[1/1] cd /home/onur/esp-ws/voyager_v2.2/build/bootloader/esp-idf/esptool_py && /home/onur/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/onur/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/onur/esp-ws/voyager_v2.2/build/bootloader/bootloader.bin
Bootloader binary size 0x5200 bytes. 0x2e00 bytes (36%) free.
[2/12] No install step for 'bootloader'
[3/12] Completed 'bootloader'
[4/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/voyager_main.c.obj
[5/12] Building C object esp-idf/gidon_encoder/CMakeFiles/__idf_gidon_encoder.dir/gidon_encoder.c.obj
[6/12] Linking C static library esp-idf/gidon_encoder/libgidon_encoder.a
[7/12] Linking C static library esp-idf/main/libmain.a
[8/12] Generating ld/sections.ld
[9/12] Building C object CMakeFiles/voyager_v2.0.elf.dir/project_elf_src_esp32s3.c.obj
[10/12] Linking CXX executable voyager_v2.0.elf
[11/12] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/onur/esp-ws/voyager_v2.2/build/voyager_v2.bin
[12/12] cd /home/onur/esp-ws/voyager_v2.2/build/esp-idf/esptool_py && /home/onur/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/onur/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/onur/esp-ws/voyager_v2.2/build/partition_table/partition-table.bin /home/onur/esp-ws/voyager_v2.2/build/voyager_v2.bin
voyager_v2.bin binary size 0x3d910 bytes. Smallest app partition is 0x100000 bytes. 0xc26f0 bytes (76%) free.
