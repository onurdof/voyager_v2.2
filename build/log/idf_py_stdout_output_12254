[1/11] Performing build step for 'bootloader'
[1/1] cd /home/onur/esp-ws/voyager_v2.2/build/bootloader/esp-idf/esptool_py && /home/onur/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/onur/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/onur/esp-ws/voyager_v2.2/build/bootloader/bootloader.bin
Bootloader binary size 0x5200 bytes. 0x2e00 bytes (36%) free.
[2/11] No install step for 'bootloader'
[3/11] Completed 'bootloader'
[4/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/voyager_main.c.obj
In file included from /home/onur/esp-ws/voyager_v2.2/main/voyager_main.c:25:
/home/onur/esp-ws/voyager_v2.2/components/pedal_encoder/include/pedal_encoder.h:24:13: warning: 'pedal_pcnt_on_reach' declared 'static' but never defined [-Wunused-function]
   24 | static bool pedal_pcnt_on_reach(pcnt_unit_handle_t unit, const pcnt_watch_event_data_t *edata, void *user_ctx);
      |             ^~~~~~~~~~~~~~~~~~~
[5/11] Building C object esp-idf/pedal_encoder/CMakeFiles/__idf_pedal_encoder.dir/pedal_encoder.c.obj
[6/11] Linking C static library esp-idf/pedal_encoder/libpedal_encoder.a
[7/11] Linking C static library esp-idf/main/libmain.a
[8/11] Generating ld/sections.ld
[9/11] Linking CXX executable voyager_v2.0.elf
[10/11] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/onur/esp-ws/voyager_v2.2/build/voyager_v2.bin
[11/11] cd /home/onur/esp-ws/voyager_v2.2/build/esp-idf/esptool_py && /home/onur/.espressif/python_env/idf5.1_py3.8_env/bin/python /home/onur/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/onur/esp-ws/voyager_v2.2/build/partition_table/partition-table.bin /home/onur/esp-ws/voyager_v2.2/build/voyager_v2.bin
voyager_v2.bin binary size 0x3e030 bytes. Smallest app partition is 0x100000 bytes. 0xc1fd0 bytes (76%) free.
